{"version":3,"sources":["Component/Table.jsx","Component/InsertScreen.jsx","Actions/InsertGuestAction.js","Component/UpdateScreen.jsx","Actions/UpdateGuestAction.js","Component/DeleteScreen.jsx","Actions/DeleteGuestAction.js","Component/InsertCheckIn.jsx","Actions/InsertCheckInAction.js","Actions/HomeAction.js","Home/Home.jsx","Routes.jsx","Header/Header.jsx","Reducer/InsertGuestReducer.js","Reducer/UpdateGuestReducer.js","Reducer/DeleteGuestReducer.js","Reducer/InsertCheckInReducer.js","Reducer/HomeReducer.js","Reducer/index.js","App.jsx","serviceWorker.js","index.js"],"names":["Table","react_default","a","createElement","react_table_es","data","this","props","columns","Header","accessor","defaultPageSize","React","Component","InsertScreen","_this","Modal_default","show","onHide","closeScreen","size","aria-labelledby","centered","closeButton","Title","Body","Form_default","Label","Control","type","placeholder","onChange","value","setName","setDocument","setPhone","Footer","Button_default","variant","onClick","_insertGuest","_this$props","name","document","phone","label","insertGuest","hotelRegistration","connect","state","InsertGuestReducer","HomeReducer","payload","target","UpdateScreen","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","people","_updateGuest","bind","assertThisInitialized","nextProps","nextState","guests","index","options","push","guest","sort","b","_this2","react_select_browser_esm","isClearable","setPerson","disabled","disableFields","person","updateGuest","reset","UpdateGuestReducer","DeleteScreen","_deleteGuest","deleteGuest","DeleteGuestReducer","InsertCheckIn","startDate","Date","endDate","Row_default","className","Card_default","style","card","cardHeader","container","lines","fields","Text","react_datepicker_es","selected","dateIn","setDateIn","dateFormat","showTimeSelect","timeFormat","dateOut","setDateOut","setGuest","Check","checked","isParking","id","checkbox","setParking","_insertCheckIn","insertCheckIn","resetState","minHeight","height","justifyContent","backgroundColor","textAlign","color","fontWeight","width","padding","display","position","paddingLeft","alignItems","InsertCheckInReducer","getTotalHotel","checkIn","daysOfWeek","weekDayCount","weekendDayCount","curDate","setHours","finalDate","dayOfWeek","getDay","setDate","getDate","getBusinessDatesCount","countDays","lastDayMinutes","getMinutes","lastDayHour","getHours","isCheckOutBeforeFourAndHalfPm","checkOut","weekDay","isCheckOutWeekDay","parkingPrice","getDataGrid","total","formatter","Intl","NumberFormat","currency","format","clientIsInHotel","register","today","isInHotel","checkInClient","Home","_init","Container_default","Component_InsertScreen","showInsert","closeInsertScreen","Component_UpdateScreen","showUpdate","closeUpdateScreen","Component_DeleteScreen","showDelete","closeDeleteScreen","content","marginLeft","DropdownButton_default","title","Dropdown_default","Item","showInsertScreen","showUpdateScreen","showDeleteScreen","Component_InsertCheckIn","InputGroup_default","Prepend","FormControl_default","aria-label","aria-describedby","_setFilter","presentFilter","_setPresentFilter","notPresentFilter","objectSpread","_setNotPresentFilter","paddingTop","Component_Table","dataGrid","loadInitialData","initialData","People","initialCheckIn","CheckIn","setTimeout","calculateValues","updatedGuest","filter","setFilter","setPresentFilter","setNotPresentFilter","filterList","list","guestName","guestDocument","toUpperCase","includes","filterListGuests","index2","concat","toConsumableArray","alert","find","newCheckIn","newRegister","updated","edit","checkIns","nome","documento","telefone","pessoa","dataEntrada","dataSaida","adicionalVeiculo","hotelBook","Routes","react_router_dom","react_router","exact","path","component","key","header","headerImg","Navbar_default","Brand","href","alt","src","INITIAL_STATE","combineReducers","arguments","length","undefined","action","App","es","store","createStore","reducers","applyMiddleware","ReduxThunk","root","src_Header_Header","Boolean","window","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e978e8cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css'\r\n \r\n\r\n\r\nclass Table extends React.Component{\r\n    render() {\r\n    const columns = [{\r\n        Header: 'Name',\r\n        accessor: 'name' // String-based value accessors!\r\n    }, {\r\n        Header: 'Document',\r\n        accessor: 'document'\r\n    }, {\r\n        Header: 'Amount Spent ($)',\r\n        accessor: 'total'\r\n    }]\r\n    return <ReactTable\r\n        data={this.props.data}\r\n        columns={columns}\r\n        defaultPageSize={5}\r\n    />\r\n    }\r\n\r\n}\r\n\r\nexport default Table\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect }from 'react-redux';\r\n\r\n\r\nimport { setDocument, setName, setPhone } from '../Actions/InsertGuestAction';\r\n\r\nclass InsertScreen extends Component{\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal show={this.props.show} onHide={() => this.props.closeScreen()} size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Insert Guest</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form.Label>Name</Form.Label>\r\n   \t\t\t\t<Form.Control type=\"text\" placeholder=\"Name\" onChange={(value) => this.props.setName(value)}/>\r\n                <Form.Label>Document</Form.Label>\r\n   \t\t\t\t<Form.Control type=\"text\" placeholder=\"Document\" onChange={(value) => this.props.setDocument(value)}/>\r\n                <Form.Label>Phone</Form.Label>\r\n   \t\t\t\t<Form.Control type=\"text\" placeholder=\"Phone\" onChange={(value) => this.props.setPhone(value)}/>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => this.props.closeScreen()}>Close</Button>\r\n                <Button variant=\"primary\" onClick={() => this._insertGuest()} >Insert</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n\t\t\t\r\n\t\t);\r\n    }\r\n    \r\n    _insertGuest(){\r\n        const { name, document, phone,label,value } = this.props;\r\n        this.props.insertGuest({ name, document, phone,label,value }, this.props.hotelRegistration);\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        name: state.InsertGuestReducer.name ,\r\n        document: state.InsertGuestReducer.document,\r\n        phone: state.InsertGuestReducer.phone,\r\n        label: state.InsertGuestReducer.label,\r\n        value: state.InsertGuestReducer.value,\r\n        hotelRegistration: state.HomeReducer.hotelRegistration\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps,{ setName: setName, setDocument: setDocument, setPhone: setPhone })(InsertScreen);","\r\n\r\nexport const setName = (value) => {\r\n    return {\r\n        type: 'SET_NAME',\r\n        payload: value.target.value\r\n    }\r\n}\r\n\r\n\r\nexport const setDocument = (value) => {\r\n    return {\r\n        type: 'SET_DOCUMENT',\r\n        payload: value.target.value\r\n    }\r\n}\r\n\r\n\r\nexport const setPhone = (value) => {\r\n    return {\r\n        type: 'SET_PHONE',\r\n        payload: value.target.value\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect }from 'react-redux';\r\nimport Select from 'react-select';\r\n\r\n\r\nimport { setDocument, setName, setPhone,setPerson ,reset} from '../Actions/UpdateGuestAction';\r\n\r\nclass UpdateScreen extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.state = {\r\n            people:[]\r\n        }\r\n        this._updateGuest = this._updateGuest.bind(this);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        var guests = [];\r\n        for(var index in nextProps.options){\r\n            guests.push(nextProps.options[index].guest);\r\n        }\r\n        this.state.people = guests.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\r\n        return !((this.props == nextProps) &&(this.state == nextState))\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal show={this.props.show} onHide={() => this.props.closeScreen()} size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Update guest</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form.Label>Choose guest to be updated:</Form.Label>\r\n                <Select\r\n                    isClearable\r\n                    value={this.props.guest}\r\n                    options={this.state.people}\r\n                    placeholder=\"Choose guest to be updated\"\r\n                    onChange={(value) => this.props.setPerson(value)}\r\n                />\r\n                <Form.Label>Guest</Form.Label>\r\n   \t\t\t\t<Form.Control disabled={this.props.disableFields} type=\"text\" placeholder=\"Name\" onChange={(value) => this.props.setName(value)} value={this.props.name}/>\r\n                <Form.Label>Document</Form.Label>\r\n   \t\t\t\t<Form.Control disabled={this.props.disableFields} type=\"text\" placeholder=\"Document\" onChange={(value) => this.props.setDocument(value)} value={this.props.document}/>\r\n                <Form.Label>Phone</Form.Label>\r\n   \t\t\t\t<Form.Control disabled={this.props.disableFields} type=\"text\" placeholder=\"Phone\" onChange={(value) => this.props.setPhone(value)} value={this.props.phone}/>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => this.props.closeScreen()}>Close</Button>\r\n                <Button variant=\"primary\" onClick={() => this._updateGuest()} >Update</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n\t\t\t\r\n\t\t);\r\n    }\r\n    \r\n    _updateGuest(){\r\n        const { name, document, phone,label,value,person } = this.props;\r\n        this.props.updateGuest({ name, document, phone,label,value,person });\r\n        this.props.reset();\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        name: state.UpdateGuestReducer.name ,\r\n        document: state.UpdateGuestReducer.document,\r\n        phone: state.UpdateGuestReducer.phone,\r\n        label: state.UpdateGuestReducer.label,\r\n        value: state.UpdateGuestReducer.value,\r\n        person: state.UpdateGuestReducer.person,\r\n        disableFields: state.UpdateGuestReducer.disableFields,\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps,{reset:reset, setName: setName, setDocument: setDocument, setPhone: setPhone ,setPerson: setPerson})(UpdateScreen);","\r\n\r\nexport const setPerson = (value) => {\r\n    if(value){\r\n        var updatedGuest = {\r\n            name: value.name,\r\n            label: value.name,\r\n            value: value.document,\r\n            document: value.document,\r\n            phone: value.phone,\r\n            person: value,\r\n            disableFields: false\r\n        }\r\n    \r\n        return {\r\n            type: 'SET_PERSON_UPDATE',\r\n            payload: updatedGuest\r\n        }\r\n    }else{\r\n        return {\r\n            type: 'RESET_SCREEN_UPDATE'\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: 'RESET_SCREEN_UPDATE'\r\n    }\r\n}\r\n\r\nexport const setName = (value) => {\r\n    return {\r\n        type: 'SET_NAME_UPDATE',\r\n        payload: value.target.value\r\n    }\r\n}\r\n\r\n\r\nexport const setDocument = (value) => {\r\n    return {\r\n        type: 'SET_DOCUMENT_UPDATE',\r\n        payload: value.target.value\r\n    }\r\n}\r\n\r\n\r\nexport const setPhone = (value) => {\r\n    return {\r\n        type: 'SET_PHONE_UPDATE',\r\n        payload: value.target.value\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect }from 'react-redux';\r\nimport Select from 'react-select';\r\n\r\n\r\nimport {setPerson,reset} from '../Actions/DeleteGuestAction';\r\n\r\nclass DeleteScreen extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.state = {\r\n            people:[]\r\n        }\r\n        this._deleteGuest = this._deleteGuest.bind(this);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        var guests = [];\r\n        for(var index in nextProps.options){\r\n            guests.push(nextProps.options[index].guest);\r\n        }\r\n        this.state.people = guests.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\r\n        return !((this.props == nextProps) &&(this.state == nextState))\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Modal show={this.props.show} onHide={() => this.props.closeScreen()} size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete Guest</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                <Form.Label>Guest</Form.Label>\r\n                <Select\r\n                    isClearable\r\n                    value={this.props.guest}\r\n                    options={this.state.people}\r\n                    placeholder=\"Choose a guest to delete\"\r\n                    onChange={(value) => this.props.setPerson(value)}\r\n                /> </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => this.props.closeScreen()}>Close</Button>\r\n                <Button variant=\"primary\" onClick={() => this._deleteGuest()} >Delete</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n\t\t\t\r\n\t\t);\r\n    }\r\n    \r\n    _deleteGuest(){\r\n        this.props.deleteGuest(this.props.person);\r\n        this.props.reset();\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        person: state.DeleteGuestReducer.person\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps,{setPerson: setPerson, reset:reset})(DeleteScreen);","\r\n\r\nexport const setPerson = (value) => {\r\n        return {\r\n            type: 'SET_PERSON_DELETE',\r\n            payload: value\r\n        }\r\n}\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: 'RESET_SCREEN_DELETE'\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport DatePicker from 'react-datepicker'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row'\r\nimport { connect }from 'react-redux';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\n\r\n\r\nimport { setDateIn, setDateOut, setGuest, setParking,resetState} from '../Actions/InsertCheckInAction';\r\n\r\nclass InsertCheckIn extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\t\tthis.state = {\r\n\t\t\tstartDate: new Date(),\r\n            endDate: new Date(),\r\n            people:[]\r\n\t\t}\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        var guests = [];\r\n        for(var index in nextProps.options){\r\n            guests.push(nextProps.options[index].guest);\r\n        }\r\n        this.state.people = guests.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\r\n        return !((this.props == nextProps) &&(this.state == nextState))\r\n    }\r\n\r\n    \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<span>\r\n                <Row className=\"justify-content-center\" >\r\n                    <Card style={style.card} >\r\n                        <Card.Header style={style.cardHeader }>New Check-In</ Card.Header>\r\n                        <Card.Body style={style.container}>\r\n                            <div style={style.lines}>\r\n                                <div style={style.fields}>\r\n                                    <Card.Text>Date/Time Check-In</Card.Text>\r\n                                    <DatePicker  selected={this.props.dateIn}  onChange={(value) => this.props.setDateIn(value)} dateFormat=\"dd/MM/yyyy HH:mm\"\r\n                                    showTimeSelect\ttimeFormat=\"HH:mm\"/>\r\n                                </div>\r\n                                <div style={style.fields}>\r\n                                    <Card.Text>Date/Time Check-Out</Card.Text>\r\n                                    <DatePicker  selected={this.props.dateOut}  onChange={(value) => this.props.setDateOut(value)} dateFormat=\"dd/MM/yyyy HH:mm\"\r\n                                    showTimeSelect\ttimeFormat=\"HH:mm\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={style.lines}>\r\n                                <div style={style.fields}>\r\n                                    <Form.Label>Person</Form.Label>\r\n                                    <Select\r\n                                        isClearable\r\n                                        value={this.props.guest}\r\n                                        options={this.state.people}\r\n                                        placeholder=\"Name\"\r\n                                        onChange={(value) => this.props.setGuest(value)}\r\n                                    />\r\n                                </div>\r\n                                <div style={style.fields}>\r\n                                    <Form.Check checked={this.props.isParking} id={'possui_veiculo'} label={'Parking Lot'} style={style.checkbox} onChange={() => this.props.setParking(this.props.isParking)}/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={style.lines}>\r\n                                <Button onClick={() => this._insertCheckIn()}>Save</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </span>\r\n\t\t\t\r\n\t\t);\r\n    }\r\n\r\n    _insertCheckIn(){\r\n        const { dateIn, dateOut, guest, isParking} = this.props;\r\n        this.props.insertCheckIn( { dateIn, dateOut, guest, isParking});\r\n        this.props.resetState();\r\n\r\n    }\r\n}\r\n\r\nconst style = {\r\n\tcontainer: {\r\n\t\tminHeight: '100%',\r\n\t\theight: 'auto',\r\n \t\tjustifyContent: 'space-between'\r\n\t},\r\n\tcardHeader: {\r\n\t\tbackgroundColor:'#1a73e8',\r\n\t\ttextAlign: 'left',\r\n\t\tcolor: 'White',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tcard: {\r\n\t\twidth: '100%'\r\n\t},\r\n    lines : {\r\n        justifyContent: 'space-between',\r\n        padding: '0.25rem',\r\n        display: 'flex',\r\n    },\r\n    fields: {\r\n        display:'block',\r\n        width: '48%'\r\n    },\r\n    checkbox: {\r\n        height: '100%',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        paddingLeft: '1.25rem',\r\n        alignItems: 'center'\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        dateIn: state.InsertCheckInReducer.dateIn ,\r\n        dateOut: state.InsertCheckInReducer.dateOut,\r\n        guest: state.InsertCheckInReducer.guest,\r\n        isParking: state.InsertCheckInReducer.isParking\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps,{ setDateIn: setDateIn, setDateOut: setDateOut, setGuest: setGuest, setParking: setParking, resetState:resetState })(InsertCheckIn);","\r\n\r\nexport const setDateIn = (value) => {\r\n    return {\r\n        type: 'SET_DATE_IN',\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\nexport const setDateOut = (value) => {\r\n    return {\r\n        type: 'SET_DATE_OUT',\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\nexport const setGuest= (value) => {\r\n    return {\r\n        type: 'SET_GUEST',\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setParking = (value) => {\r\n    return {\r\n        type: 'SET_PARKING',\r\n        payload: !value\r\n    }\r\n}\r\n\r\nexport const resetState = () => {\r\n    return {\r\n        type: 'RESET_STATE',\r\n    }\r\n}","export const showInsertScreen = () => {\r\n    return {\r\n        type: 'SHOW_INSERT',\r\n        payload: true\r\n    }\r\n}\r\n\r\nexport const closeInsertScreen = () => {\r\n    return {\r\n        type: 'SHOW_INSERT',\r\n        payload: false\r\n    }\r\n}\r\n\r\nexport const showDeleteScreen = () => {\r\n    return {\r\n        type: 'SHOW_DELETE',\r\n        payload: true\r\n    }\r\n}\r\n\r\nexport const closeDeleteScreen = () => {\r\n    return {\r\n        type: 'SHOW_DELETE',\r\n        payload: false\r\n    }\r\n}\r\n\r\nexport const showUpdateScreen = () => {\r\n    return {\r\n        type: 'SHOW_UPDATE',\r\n        payload: true\r\n    }\r\n}\r\n\r\nexport const closeUpdateScreen = () => {\r\n    return {\r\n        type: 'SHOW_UPDATE',\r\n        payload: false\r\n    }\r\n}\r\n\r\nexport const deleteGuest = (deleteGuest , hotelRegistration) => {\r\n    var newHotelRegistration = hotelRegistration.filter(hotelBook => hotelBook.guest !== deleteGuest)\r\n    return {\r\n        type: 'DELETE_GUEST',\r\n        payload: newHotelRegistration\r\n    }\r\n}\r\nexport const updateGuest = (updatedGuest, hotelRegistration) => {\r\n    if(updatedGuest.name && updatedGuest.document && updatedGuest.phone && updatedGuest.person){\r\n\r\n        for(var index in hotelRegistration){\r\n            if(hotelRegistration[index].guest === updatedGuest.person){\r\n                var updated = {\r\n                    name: updatedGuest.name,\r\n                    label: updatedGuest.name,\r\n                    value: updatedGuest.document,\r\n                    document: updatedGuest.document,\r\n                    phone: updatedGuest.phone,\r\n                }\r\n                hotelRegistration[index].guest = updated;\r\n                var edit = [...hotelRegistration];\r\n            }\r\n        }\r\n        return {\r\n            type: 'UPDATE_GUEST',\r\n            payload: edit\r\n        }\r\n    }else{\r\n        alert('Campos obrigatórios não preenchidos')\r\n    }\r\n    return{type:'ERROR'};\r\n\r\n}\r\n\r\nexport const insertGuest = (guest, hotelRegistration) => {\r\n        if(guest.name && guest.document && guest.phone){\r\n            var isDuplicated = hotelRegistration.find(register => register.guest.document === guest.document);\r\n            if(isDuplicated){\r\n                alert('Hóspede com esse documento já cadastrado');\r\n                return{type:'ERROR'};\r\n            }\r\n            var newRegister = {\r\n                guest:guest,\r\n                checkIn:[]\r\n            }\r\n            if(hotelRegistration){\r\n                hotelRegistration = [...hotelRegistration, newRegister];\r\n            }else{\r\n                hotelRegistration = [newRegister];\r\n            }\r\n            return {\r\n                type: 'INSERT_GUEST',\r\n                payload: hotelRegistration\r\n            }\r\n        }else{\r\n            alert('Campos obrigatórios não preenchidos')\r\n        }\r\n        return{type:'ERROR'};\r\n\r\n}\r\n\r\n\r\nexport const insertCheckIn= (checkIn, hotelRegistration) => {\r\n    if(checkIn.dateIn > checkIn.dateOut){\r\n        alert('Data de entrada menor que data de saída')\r\n    }else if(checkIn.dateIn && checkIn.dateOut && checkIn.guest){\r\n        var register = hotelRegistration.find(data => data.guest === checkIn.guest);\r\n        var newCheckIn = {\r\n            dateIn: checkIn.dateIn,\r\n            dateOut: checkIn.dateOut,\r\n            isParking: checkIn.isParking\r\n        }\r\n        register.checkIn.push(newCheckIn);\r\n    \r\n        return {\r\n            type: 'INSERT_NEW_CHECKIN',\r\n            payload: hotelRegistration\r\n        }\r\n    }else{\r\n        alert('Campos obrigatórios não preenchidos')\r\n    }\r\n    return{type:'ERROR'};\r\n}\r\n\r\nexport const setFilter = (filter) => {\r\n    return {\r\n        type: 'SET_FILTER',\r\n        payload: filter.target.value\r\n    }\r\n}\r\n\r\nexport const setPresentFilter = (value) => {\r\n    return {\r\n        type: 'SET_PRESENT_FILTER',\r\n        payload: !value\r\n    }\r\n}\r\n\r\nexport const setNotPresentFilter = (value) => {\r\n    return {\r\n        type: 'SET_NOT_PRESENT_FILTER',\r\n        payload: !value\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const calculateValues = (props) => {\r\n    if(props.hotelRegistration){ \r\n        var filterList = filterListGuests(props)\r\n        var dataGrid = []; \r\n        for(var index in filterList){\r\n            var register= filterList[index];\r\n            var total = 0.00;\r\n            for(var index2 in register.checkIn){\r\n                var checkIn= register.checkIn[index2];\r\n                total += getTotalHotel(checkIn)\r\n            }\r\n            dataGrid = [...dataGrid, getDataGrid(register.guest,total)]\r\n        }\r\n        return {\r\n            type: 'CALCULATE_VALUES',\r\n            payload: (dataGrid.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)))\r\n        }\r\n    }else{\r\n        return {\r\n            type: 'CALCULATE_VALUES',\r\n            payload: dataGrid\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTotalHotel(checkIn){\r\n    var startDate = checkIn.dateIn;\r\n    var endDate = checkIn.dateOut;\r\n    \r\n    var daysOfWeek = getBusinessDatesCount(startDate,endDate);\r\n\r\n    var weekDayCount = daysOfWeek.weekDayCount;\r\n    var weekendDayCount = daysOfWeek.weekendDayCount;\r\n    var countDays = weekDayCount+ weekendDayCount;\r\n    if(isCheckOutBeforeFourAndHalfPm(endDate) && countDays > 1){\r\n        if(isCheckOutWeekDay(endDate)){\r\n            weekDayCount--;\r\n        }else{\r\n            weekendDayCount--;\r\n        }\r\n    }\r\n    var parkingPrice = 0 ;\r\n    if(checkIn.isParking){\r\n        parkingPrice = ((weekDayCount * 15) + (weekendDayCount * 20));\r\n    }\r\n    var total = ((weekDayCount * 120) + (weekendDayCount * 150));\r\n    return (total + parkingPrice);\r\n}\r\n\r\nfunction isCheckOutWeekDay(checkOut){\r\n    var weekDay = false;\r\n    var dayOfWeek = checkOut.getDay();\r\n    if(!((dayOfWeek == 6) || (dayOfWeek == 0))){\r\n        weekDay = true;\r\n    }\r\n    return weekDay;\r\n}\r\n\r\nfunction isCheckOutBeforeFourAndHalfPm(endDate){\r\n    var lastDayMinutes = endDate.getMinutes();\r\n    var lastDayHour = endDate.getHours();\r\n    if(lastDayHour > 16){\r\n        return false\r\n    }if(lastDayHour == 16 && lastDayMinutes > 30){\r\n        return false\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getBusinessDatesCount(startDate, endDate) {\r\n    var weekDayCount = 0;\r\n    var weekendDayCount = 0;\r\n    var curDate = new Date(new Date(startDate).setHours(0,0,0,0));\r\n    var finalDate =new Date( new Date(endDate).setHours(0,0,0,0));\r\n    while (curDate <= finalDate) {\r\n        var dayOfWeek = curDate.getDay();\r\n        if(!((dayOfWeek == 6) || (dayOfWeek == 0))){\r\n            weekDayCount++;\r\n        }else{\r\n            weekendDayCount++;\r\n        }\r\n        curDate.setDate(curDate.getDate() + 1);\r\n    }\r\n    var infoData = {weekDayCount:weekDayCount, \r\n                    weekendDayCount:weekendDayCount};\r\n    return infoData;\r\n}\r\n\r\nfunction getDataGrid(guest, total){\r\n    var formatter = new Intl.NumberFormat('pt-BR', {\r\n        style: 'currency',\r\n        currency: 'BRL',\r\n    });\r\n    var data = {};\r\n    data.name = guest.name;\r\n    data.document = guest.document;\r\n    data.total = formatter.format(total);\r\n    return data;\r\n}\r\n\r\nfunction filterListGuests (props){\r\n    var list = [];\r\n    var hotelRegistration = props.hotelRegistration;\r\n    for(var index in hotelRegistration){\r\n        var register= hotelRegistration[index];\r\n        var guestName = register.guest.name;\r\n        var guestDocument = register.guest.document;\r\n        var isInHotel = clientIsInHotel(register);\r\n        if(!((props.notPresentFilter && !isInHotel) || (props.presentFilter && isInHotel))) {\r\n            continue;\r\n        }\r\n        if(props.filter && \r\n            (!guestName.toUpperCase().includes(props.filter.toUpperCase()) \r\n            && !guestDocument.toUpperCase().includes(props.filter.toUpperCase())) ){\r\n            continue;\r\n        }\r\n        list.push(register)   \r\n    }\r\n    return list;\r\n}\r\n\r\n\r\n\r\nfunction clientIsInHotel(register) {\r\n    var today = new Date();\r\n    var isInHotel = false;\r\n    for(var index in register.checkIn){\r\n        var checkInClient = register.checkIn[index];\r\n        if(checkInClient.dateIn <= today && checkInClient.dateOut >= today ){\r\n            isInHotel = true;\r\n            break;\r\n        }\r\n    }\r\n    return isInHotel;\r\n}\r\n\r\n\r\nexport const loadInitialData = (guests, checkIns) => {\r\n    var hotelRegistration = [];\r\n    for(var index in guests){\r\n        var person = guests[index];\r\n        var guest = {};\r\n        guest.name = person.nome;\r\n        guest.label = person.nome;\r\n        guest.value = person.documento;\r\n        guest.document = person.documento;\r\n        guest.phone = person.telefone;\r\n        var newCheckIn = checkIns.find(data => data.pessoa.documento === guest.document);\r\n        var checkIn = {\r\n            dateIn:  new Date(newCheckIn.dataEntrada),\r\n            dateOut:  new Date(newCheckIn.dataSaida),\r\n            isParking: newCheckIn.adicionalVeiculo\r\n        }\r\n        hotelRegistration.push({guest:guest,checkIn:[checkIn]});\r\n    }\r\n    return {\r\n        type: 'INSERT_INITIAL_DATA',\r\n        payload: hotelRegistration\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Table from '../Component/Table'\r\nimport InsertScreen from '../Component/InsertScreen'\r\nimport UpdateScreen from '../Component/UpdateScreen'\r\nimport DeleteScreen from '../Component/DeleteScreen'\r\nimport InsertCheckIn from '../Component/InsertCheckIn'\r\nimport initialData from '../static/InitialData/People.json'\r\nimport initialCheckIn from '../static/InitialData/CheckIn.json'\r\n\r\nimport {calculateValues, \r\n\tshowInsertScreen, \r\n\tinsertGuest, \r\n\tinsertCheckIn ,\r\n\tcloseInsertScreen,\r\n\tsetFilter,\r\n\tsetPresentFilter, \r\n\tsetNotPresentFilter,\r\n\tloadInitialData,\r\n\tshowUpdateScreen,\r\n\tcloseUpdateScreen,\r\n\tupdateGuest,\r\n\tshowDeleteScreen,\r\n\tcloseDeleteScreen,\r\n\tdeleteGuest} from '../Actions/HomeAction';\r\nimport { connect }from 'react-redux';\r\n\r\nclass Home extends React.Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis._init();\r\n\t  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container style={style.container}>\r\n\t\t\t\t<InsertScreen show={this.props.showInsert} closeScreen = {this.props.closeInsertScreen} insertGuest = {this.props.insertGuest}></InsertScreen>\r\n\t\t\t\t<UpdateScreen show={this.props.showUpdate} closeScreen = {this.props.closeUpdateScreen} updateGuest = {this._updateGuest} options={this.props.hotelRegistration}></UpdateScreen>\r\n\t\t\t\t<DeleteScreen show={this.props.showDelete} closeScreen = {this.props.closeDeleteScreen} deleteGuest = {this._deleteGuest} options={this.props.hotelRegistration}></DeleteScreen>\r\n\t\t\t\t<div style={style.content}>\r\n\t\t\t\t\t<span >\r\n\t\t\t\t\t\t<div style={{marginLeft:'-15px'}}>\r\n\t\t\t\t\t\t<DropdownButton id=\"dropdown-basic-button\" title=\"Manage Guests\">\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => this.props.showInsertScreen()} >Insert Guest</Dropdown.Item>\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => this.props.showUpdateScreen()} >Update Guest</Dropdown.Item>\r\n\t\t\t\t\t\t\t<Dropdown.Item onClick={() => this.props.showDeleteScreen()} >Delete Guest</Dropdown.Item>\r\n\t\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<InsertCheckIn  insertCheckIn= {this._insertCheckIn} options={this.props.hotelRegistration}></InsertCheckIn>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t<Row className=\"justify-content-center\" >\r\n\t\t\t\t\t\t<Card style={style.card} >\r\n\t\t\t\t\t\t\t<Card.Header style={style.cardHeader }>Board</ Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body style={style.container}>\r\n\t\t\t\t\t\t\t\t<div style={style.lines}>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text id=\"filtro\" >Find by:</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={(value) => this._setFilter(value)} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{display: 'flex'}}>\r\n\t\t\t\t\t\t\t\t\t<Form.Check checked={this.props.presentFilter} label={'Guests at hotel'} style={style.checkbox} onChange={() => this._setPresentFilter(this.props.presentFilter)}/>\r\n\t\t\t\t\t\t\t\t\t<Form.Check checked={this.props.notPresentFilter} label={'Guests who have left the hotel'} style={{...style.checkbox, ...{'marginLeft':'1.25rem'}}} onChange={() => this._setNotPresentFilter(this.props.notPresentFilter)}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{paddingTop: '1.25rem'}}>\r\n\t\t\t\t\t\t\t\t\t<Table data={this.props.dataGrid}></Table>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n\r\n\t_init(){\r\n\t\tthis.props.loadInitialData(initialData.People, initialCheckIn.CheckIn);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t\tthis._insertCheckIn = this._insertCheckIn.bind(this);\r\n\t\tthis._setFilter = this._setFilter.bind(this);\r\n\t\tthis._setNotPresentFilter = this._setNotPresentFilter.bind(this);\r\n\t\tthis._setPresentFilter = this._setPresentFilter.bind(this);\r\n\t\tthis._updateGuest = this._updateGuest.bind(this);\r\n\t\tthis._deleteGuest = this._deleteGuest.bind(this);\r\n\t}\r\n\r\n\t_deleteGuest(guest){\r\n\t\tthis.props.deleteGuest(guest, this.props.hotelRegistration);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t}\r\n\r\n\t_updateGuest(updatedGuest){\r\n\t\tthis.props.updateGuest(updatedGuest, this.props.hotelRegistration);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t}\r\n\r\n\r\n\t_insertCheckIn(checkIn){\r\n\t\tthis.props.insertCheckIn(checkIn, this.props.hotelRegistration);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t}\r\n\r\n\t_setFilter(filter){\r\n    \tthis.props.setFilter(filter);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t}\r\n\r\n\t_setPresentFilter(filter){\r\n    \tthis.props.setPresentFilter(filter);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t}\r\n\r\n\t_setNotPresentFilter(filter){\r\n    \tthis.props.setNotPresentFilter(filter);\r\n\t\tsetTimeout(function(){ \r\n\t\t\tthis.props.calculateValues(this.props);\r\n\t\t}.bind(this), 100);\r\n\t}\r\n\t\r\n\r\n}\r\n\r\nconst style = {\r\n\tcontainer: {\r\n\t\tminHeight: '100%',\r\n\t\theight: 'auto',\r\n \t\tjustifyContent: 'space-between'\r\n\t},\r\n\tcardHeader: {\r\n\t\tbackgroundColor:'#1a73e8',\r\n\t\ttextAlign: 'left',\r\n\t\tcolor: 'White',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tcard: {\r\n\t\twidth: '100%'\r\n\t},\r\n\tcontent: {\r\n\t\tdisplay: 'inline',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding:'10%'\r\n\t  },\r\n\t  lines : {\r\n\t\tjustifyContent: 'space-between',\r\n\t\tpadding: '0.25rem',\r\n\t\tdisplay: 'flex',\r\n\t  },\r\n\t  fields: {\r\n\t\tdisplay:'block',\r\n\t\twidth: '48%'\r\n\t  },\r\n\t  checkbox: {\r\n\t\theight: '100%',\r\n\t\tposition: 'relative',\r\n\t\tdisplay: 'flex',\r\n\t\tpaddingLeft: '1.25rem',\r\n\t\talignItems: 'center'\r\n\t  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n\t\tshowInsert: state.HomeReducer.showInsert ,\r\n\t\tshowUpdate: state.HomeReducer.showUpdate ,\r\n\t\tshowDelete: state.HomeReducer.showDelete ,\r\n\t\tpresentFilter: state.HomeReducer.presentFilter,\r\n\t\tnotPresentFilter: state.HomeReducer.notPresentFilter,\r\n\t\tfilter: state.HomeReducer.filter,\r\n\t\tdataGrid: state.HomeReducer.dataGrid,\r\n\t\thotelRegistration: state.HomeReducer.hotelRegistration\r\n    }\r\n);\r\nexport default connect(mapStateToProps,{ \r\n\tcalculateValues:calculateValues, \r\n\tsetNotPresentFilter:setNotPresentFilter, \r\n\tsetPresentFilter:setPresentFilter, \r\n\tsetFilter:setFilter,\r\n\tinsertCheckIn: insertCheckIn, \r\n\tinsertGuest: insertGuest, \r\n\tupdateGuest: updateGuest, \r\n\tshowInsertScreen: showInsertScreen ,\r\n\tcloseInsertScreen:closeInsertScreen,\r\n\tloadInitialData:loadInitialData,\r\n\tshowUpdateScreen:showUpdateScreen,\r\n\tcloseUpdateScreen:closeUpdateScreen,\r\n\tshowDeleteScreen:showDeleteScreen,\r\n\tcloseDeleteScreen:closeDeleteScreen,\r\n\tdeleteGuest:deleteGuest\r\n})(Home);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Home from './Home/Home.jsx'\n\n\nexport default props => (\n    <Router>\n        <Switch>\n            <Route exact path=\"/\" component={Home} key=\"Home\"/>\n        </Switch>\n    </Router>\n);"," \timport React from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst style = {\n\theader: {\n\t\theight: \"10%\",\n\t\tbackgroundColor: \"rgb(26, 115, 232)\"\n\t},\n\n\theaderImg: {\n\t\twidth: \"10rem\",\n\t\theight: \"4rem\"\n\t}\n}\n\nclass Header extends React.Component { \n\trender() {\n\t\treturn (\n\t\t\t<Navbar variant=\"dark\"  style={style.header}>\n\t\t\t\t<Navbar.Brand href=\"https://github.com/mbepler\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"my_github\"\n\t\t\t\t\t\tsrc=\"https://miro.medium.com/max/1170/1*zvwgIycD5ePCTv1fUNdeJg.png\" \n\t\t\t\t\t\tclassName=\"d-inline-block align-top\"\n\t\t\t\t\t\tstyle={style.headerImg}\n\t\t\t\t\t/>\n\t\t\t\t</Navbar.Brand>\n\t\t\t</Navbar>\n\t\t);\n\t}\n\n}\n\nexport default Header","const INITIAL_STATE = {\r\n    name: '',\r\n    label: '',\r\n    value: '',\r\n    document: '',\r\n    phone: ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'SET_NAME':\r\n            return { ...state, name: action.payload, label: action.payload};\r\n        case 'SET_DOCUMENT':\r\n            return { ...state, document: action.payload, value: action.payload };\r\n        case 'SET_PHONE':\r\n            return { ...state, phone: action.payload };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","const INITIAL_STATE = {\r\n    name: '',\r\n    label: '',\r\n    value: '',\r\n    document: '',\r\n    phone: '',\r\n    person: {},\r\n    disableFields: true\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'SET_NAME_UPDATE':\r\n            return { ...state, name: action.payload, label: action.payload};\r\n        case 'SET_DOCUMENT_UPDATE':\r\n            return { ...state, document: action.payload, value: action.payload };\r\n        case 'SET_PHONE_UPDATE':\r\n            return { ...state, phone: action.payload };\r\n        case 'SET_PERSON_UPDATE':\r\n            return action.payload ;\r\n        case 'RESET_SCREEN_UPDATE':\r\n            return INITIAL_STATE ;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","const INITIAL_STATE = {\r\n    person: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'SET_PERSON_DELETE':\r\n            return { ...state, person: action.payload };\r\n        case 'RESET_SCREEN_DELETE':\r\n            return INITIAL_STATE ;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","const INITIAL_STATE = {\r\n    dateIn: new Date(),\r\n    dateOut: new Date(),\r\n    guest: '',\r\n    isParking: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'SET_DATE_IN':\r\n            return { ...state, dateIn: action.payload };\r\n        case 'SET_DATE_OUT':\r\n            return { ...state, dateOut: action.payload };\r\n        case 'SET_GUEST':\r\n            return { ...state, guest: action.payload };\r\n        case 'SET_PARKING':\r\n            return { ...state, isParking: action.payload };\r\n        case 'RESET_STATE':\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","const INITIAL_STATE = {\r\n    showInsert: false,\r\n    showUpdate: false,\r\n    showDelete: false,\r\n    presentFilter: true,\r\n    notPresentFilter: true,\r\n    filter: '',\r\n    guests : [],\r\n    checkIns: [],\r\n    dataGrid:[],\r\n    hotelRegistration:[]\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'SHOW_INSERT':\r\n            return { ...state, showInsert: action.payload };\r\n        case 'SHOW_UPDATE':\r\n            return { ...state, showUpdate: action.payload };\r\n        case 'SHOW_DELETE':\r\n            return { ...state, showDelete: action.payload };\r\n        case 'INSERT_GUEST':\r\n            return { ...state,   hotelRegistration: action.payload, showInsert: false };\r\n        case 'UPDATE_GUEST':\r\n            return { ...state,   hotelRegistration: action.payload, showUpdate: false };\r\n        case 'DELETE_GUEST':\r\n            return { ...state,   hotelRegistration: action.payload, showDelete: false };\r\n        case 'INSERT_NEW_CHECKIN':\r\n            return { ...state, hotelRegistration: action.payload};\r\n        case 'SET_FILTER':\r\n            return { ...state, filter: action.payload };\r\n        case 'SET_PRESENT_FILTER':\r\n            return { ...state, presentFilter: action.payload };\r\n        case 'SET_NOT_PRESENT_FILTER':\r\n            return { ...state, notPresentFilter: action.payload };\r\n        case 'CALCULATE_VALUES':\r\n            return { ...state, dataGrid:  action.payload };\r\n        case 'INSERT_INITIAL_DATA':\r\n            return { ...state, hotelRegistration:action.payload};\r\n        case 'INSERT_INITIAL_CHECKIN':\r\n            return { ...state, checkIns: action.payload  };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport InsertGuestReducer from './InsertGuestReducer';\r\nimport UpdateGuestReducer from './UpdateGuestReducer';\r\nimport DeleteGuestReducer from './DeleteGuestReducer';\r\n\r\nimport InsertCheckInReducer from './InsertCheckInReducer';\r\nimport HomeReducer from './HomeReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    InsertGuestReducer: InsertGuestReducer,\r\n    UpdateGuestReducer: UpdateGuestReducer,\r\n    InsertCheckInReducer:InsertCheckInReducer,\r\n    DeleteGuestReducer:DeleteGuestReducer,\r\n    HomeReducer:HomeReducer\r\n});","import React from 'react';\n\nimport { Provider} from 'react-redux';\nimport {createStore, applyMiddleware } from 'redux';\n\nimport Routes from './Routes.jsx';\nimport Header from './Header/Header.jsx'\nimport reducers from './Reducer'\nimport ReduxThunk from 'redux-thunk';\n\nexport default class App extends React.Component {\n\n    render(){\n\t\treturn (\n\t\t\t<Provider store={createStore(reducers, {}, applyMiddleware(ReduxThunk))} >\n\t\t\t\t<div id=\"root\" style={style.root}>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Routes/>\n\t\t\t\t</div>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\nconst style = {\n\troot: {\n\t\theight: \"100%\",\n\t\twidth: \"100%\"\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './static/css/bootstrap.min.css'\nimport './static/css/index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}